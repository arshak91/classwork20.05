---
- name: Install Nginx in AWS AMI Docker container
  hosts: all
  remote_user: ubuntu
  vars:
    ansible_ssh_private_key_file: "~/.ssh/virginia.pem"
    container_count: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1
    ansible_become: true
    ansible_become_user: root
  tasks:
    - name: copy pem file
      copy:
        src: ../../../virginia.pem
        dest: ~/.ssh/virginia.pem
        owner: ubuntu  # Update with appropriate user if different
        mode: 0644  # Update with appropriate permissions if needed
    - name: Change permissions of a pem file
      file:
        path: ~/.ssh/virginia.pem
        mode: "0644"  # Specify the desired permissions here
        state: file

    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Install NGINX
      apt:
        name: nginx
    - name: Install Docker dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-setuptools

    - name: Install gnupg, lsb-release, python3-pip, virtualenv packages
      shell:
        sudo apt install -y gnupg &&
        sudo apt install -y lsb-release &&
        sudo apt install -y python3-pip &&
        sudo apt install -y virtualenv
    - name: Add Docker GPG apt Key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/docker-archive-keyring.gpg > /dev/null

    - name: Create Docker repository source file
      shell: echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" | sudo tee /etc/apt/sources.list.d/docker.list

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest

    - name: Install Docker Module for Python
      pip:
        name: docker
        state: present
        executable: pip3

    - name: Create folder
      file:
        path: /var/www/rateInfo
        state: directory
        mode: '0755'  # Update with appropriate permissions if needed
        owner: ubuntu  # Update with appropriate user if different

    - name: Create file
      file:
        path: /var/www/rateInfo/index.html
        state: touch
        mode: '0644'  # Update with appropriate permissions if needed
        owner: ubuntu  # Update with appropriate user if different

    - name: Create file
      file:
        path: /var/www/rateInfo/rate.html
        state: touch
        mode: 0644  # Update with appropriate permissions if needed
        owner: ubuntu

    - name: Create directory
      file:
        path: /etc/nginx/sites-enabled
        state: directory
        mode: '0755'
        owner: ubuntu

    - name: Add NGINX conf
      copy:
        src: ./../nginx/nginx.conf
        dest: /etc/nginx/sites-enabled/nginx.conf
        owner: ubuntu  # Update with appropriate user if different
        mode: 0644  # Update with appropriate permissions if needed

    - name: set default NGINX conf
      file:
        src: /etc/nginx/sites-enabled/nginx.conf
        dest: /etc/nginx/sites-enabled/default
        state: link
    - name: Create directory
      file:
        path: /home/ubuntu/opt
        state: directory
        mode: '0755'
        owner: ubuntu
    - name: Create file
      file:
        path: /home/ubuntu/opt/scrap.sh
        state: touch
        mode: 0644  # Update with appropriate permissions if needed
        owner: ubuntu

    - name: Add NGINX conf
      copy:
        src: ./../nginx/scrap.sh
        dest: /home/ubuntu/opt/scrap.sh
        owner: ubuntu  # Update with appropriate user if different
        mode: 0644  # Update with appropriate permissions if needed

    - name: Restart Nginx service
      service:
        name: nginx
        state: restarted

    - name: sleepy
      shell: ". /home/ubuntu/opt/scrap.sh > /dev/null 2>&1 &"
