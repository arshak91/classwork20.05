name: Test DevOps Code
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/terraform.yml'
      - 'ansible/**'
      - 'terraform/**'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      # - name: Packer Build
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      #   run: |
      #     packer build packer/index.json

      - name: Terraform Init
        run: terraform init -upgrade
        working-directory: ./terraform/ec2

      - name: Terraform Apply
        working-directory: ./terraform/ec2
        run: terraform apply -auto-approve -var="access_key=${{ secrets.AWS_ACCESS_KEY }}"
          -var="secret_key=${{ secrets.AWS_SECRET_KEY }}"
          -var-file="./variables.tfvars"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Ansible
        run: |
          pip install ansible

      - name: Get Terraform Outputs
        working-directory: ./terraform/ec2
        id: aws_instance
        run: |
          publicIp=$(terraform output EC2_Instance_Public_IP)
          publicDNS=$(terraform output EC2_Instance_Public_DNS)
          echo "::set-output name=publicIp::$publicIp"
          echo "::set-output name=publicDNS::$publicDNS"

      - name: write inventory
        working-directory: ./ansible
        run: echo ${{ steps.aws_instance.outputs.publicIp }} >> inventories

      - name: Copy file to GitHub
        run: |
          cp ../../../../virginia.pem ~/.ssh/virginia.pem
          chmod 644 ~/.ssh/virginia.pem

      # - name: Set up SSH key
      #   run: |
      #     mkdir -p ~/.ssh
      #     touch ~/.ssh/id_rsa
      #     echo "${{ secrets.AWS_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa

      # - name: Connect to EC2 instance and copy PEM file
      #   run: |
      #     touch ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
      #     echo ${{ steps.aws_instance.outputs.publicIp }} > ~/.ssh/known_hosts
      #     ssh-keygen -R ${{ steps.aws_instance.outputs.publicIp }}
          # scp -i ~/.ssh/id_rsa /.ssh/virginia.pem ubuntu@${{ steps.aws_instance.outputs.publicDNS }}:/.ssh/

      # - name: Set up SSH key
      #   uses: webfactory/ssh-agent@v0.5.2
      #   with:
      #     ssh-private-key: ${{ secrets.AWS_PRIVATE_KEY }}

      # - name: Install Ansible dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y ansible

      - name: Run Ansible playbook
        working-directory: ./ansible
        run: |
          ansible-playbook nginx-container.yml -i inventories
